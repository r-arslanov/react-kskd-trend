{"version":3,"sources":["logo.svg","components/DpList.js","components/ObjButton.js","components/ObjList.js","App.js","reportWebVitals.js","index.js"],"names":["DpList","props","state","names","type","cbNames","fetch","then","raw","json","response","console","log","this","getNames","setState","className","map","dp","name","Component","ObjButton","text","context","onClick","ObjList","bindClick","AppContext","React","createContext","App","useState","updType","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,gDCGMA,E,kDAMjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IANVC,MAAQ,CACJC,MAAO,GACPC,KAAM,GAGQ,E,4CAIlB,SAASC,GACLC,MAAM,wCACDC,MAAK,SAAAC,GACF,OAAOA,EAAIC,UACZF,MAAK,SAAAG,GACJL,EAAQK,Q,+BAIpB,WACIC,QAAQC,IAAI,yB,gCAEhB,WAAqB,IAAD,OACbC,KAAKX,MAAME,OAASS,KAAKZ,MAAMG,MAC9BS,KAAKC,UAAS,SAACJ,GACX,EAAKK,SACD,CACIZ,MAAMO,EAASP,MACfC,KAAM,EAAKH,MAAMG,Y,oBAMrC,WACI,OACI,qBAAKY,UAAU,kBAAf,SACI,6BACKH,KAAKX,MAAMC,MAAMc,KAAI,SAAAC,GAAE,OAAI,6BAAKA,EAAGC,kB,GAtCpBC,aCAfC,G,wDACjB,WAAYpB,GAAO,IAAD,8BACd,cAAMA,IAEVA,MAAQ,CAACqB,KAAK,GAAIlB,KAAK,GAHL,E,+CAKlB,SAAYA,GACRO,QAAQC,IAAI,gBAAkBR,GAC9BS,KAAKU,QAAQnB,KAAOA,I,oBAGxB,WACI,OAAQ,wBAAQY,UAAU,SAASQ,QAASX,KAAKZ,MAAMuB,QAA/C,SAAyDX,KAAKZ,MAAMqB,W,GAZ7CF,cCElBK,G,wDACjB,WAAYxB,GAAO,uCACTA,G,0CAEV,WAAS,IAAD,OACJ,OACI,sBAAKe,UAAU,mBAAf,UACI,cAAC,EAAD,CAAWQ,QAAS,kBAAM,EAAKvB,MAAMyB,UAAU,IAAIJ,KAAK,QACxD,cAAC,EAAD,CAAWE,QAAS,kBAAM,EAAKvB,MAAMyB,UAAU,IAAIJ,KAAK,QACxD,cAAC,EAAD,CAAWE,QAAS,kBAAM,EAAKvB,MAAMyB,UAAU,IAAIJ,KAAK,UACxD,cAAC,EAAD,CAAWE,QAAS,kBAAM,EAAKvB,MAAMyB,UAAU,IAAIJ,KAAK,gB,GAVnCF,cCE/BO,EAAaC,IAAMC,cAAc,cAsBxBC,MAjBf,WACE,MAAwBC,mBAAS,GAAjC,mBAAO3B,EAAP,KAAa4B,EAAb,KACA,OACE,cAACL,EAAWM,SAAZ,UACE,sBAAKjB,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CAASU,UAAW,SAACtB,GAAD,OAAU4B,EAAQ5B,MACtC,cAAC,EAAD,CAAQA,KAAMA,OAEhB,qBAAKY,UAAU,aAAf,SACE,oBAAIA,UAAU,aAAd,qCCVKkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ff85e09f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport './../styles/DpList.css';\n\nexport default class DpList extends Component{\n    state = {\n        names: [],\n        type: 0\n    }\n\n    constructor(props){\n        super(props);\n    }\n\n    getNames(cbNames){\n        fetch(\"http://my-develop.ddns.net/names.php\")\n            .then(raw => {\n                return raw.json();\n            }).then(response=>{\n                cbNames(response);\n            });\n    }\n\n    componentDidMount(){\n        console.log(\"component did mount\");\n    }\n    componentDidUpdate(){\n        if(this.state.type !== this.props.type){\n            this.getNames((response)=>{\n                this.setState(\n                    {\n                        names:response.names,\n                        type: this.props.type\n                    });\n            });\n        }\n    }\n    \n    render(){\n        return(\n            <div className=\"DpListContainer\">\n                <ul>\n                    {this.state.names.map(dp => <li>{dp.name}</li> )}\n                </ul>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './../styles/ObjButton.css';\n\nexport default class ObjButton extends Component{\n    constructor(props){\n        super(props);\n    }\n    props = {text:\"\", type:0};\n\n    updateValue(type){\n        console.log(\"update type: \" + type);\n        this.context.type = type;\n    }\n\n    render(){\n        return( <button className=\"ObjBtn\" onClick={this.props.onClick}>{this.props.text}</button> );\n    }\n}","import React, {Component} from 'react';\nimport ObjButton from './ObjButton';\n\nimport './../styles/ObjList.css';\n\nexport default class ObjList extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <div className=\"ObjListContainer\">\n                <ObjButton onClick={() => this.props.bindClick(1)} text=\"One\" />\n                <ObjButton onClick={() => this.props.bindClick(2)} text=\"two\" />\n                <ObjButton onClick={() => this.props.bindClick(3)} text=\"three\" />\n                <ObjButton onClick={() => this.props.bindClick(4)} text=\"four\" />\n            </div>\n        );\n    }\n}","import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './styles/App.css';\n\nimport DpList, { updateType } from './components/DpList';\nimport ObjList from './components/ObjList';\n\nconst AppContext = React.createContext(\"AppContext\");\n// function bindClick(type){\n//   updateType(type);\n// }\n\nfunction App() {\n  const [type, updType] = useState(0);\n  return (\n    <AppContext.Provider>\n      <div className=\"App\"> \n        <div className=\"ControlDiv\">\n          <ObjList bindClick={(type) => updType(type)}/>\n          <DpList type={type} />\n        </div>\n        <div className=\"ContentDiv\">\n          <h1 className=\"TextHeader\">This is Content</h1>\n        </div>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}